version: 2.1

orbs:
  python: circleci/python@1.3.2
  # Using windows for builds
  win: circleci/windows@2.4.0
  # Upload artifacts to s3
  aws-s3: circleci/aws-s3@2.0.0
  codecov: codecov/codecov@3.3.0

jobs:

  get-ci-tools: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "d1:d5:96:4d:ed:58:6e:7f:58:cc:21:5f:94:20:76:49"
      - run:
          name: I know Github as a host
          command: |
            mkdir ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command: git clone git@github.com:specklesystems/speckle-sharp-ci-tools.git speckle-sharp-ci-tools
      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools
  get-ui: # Clones our ci tools and persists them to the workspace
    docker:
      - image: cimg/base:2021.01
    steps:
      - add_ssh_keys:
          fingerprints:
            - "d1:d5:96:4d:ed:58:6e:7f:58:cc:21:5f:94:20:76:49"
      - run:
          name: I know Github as a host
          command: |
            mkdir ~/.ssh
            touch ~/.ssh/known_hosts
            ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone
          command:  |
            git clone git@github.com:specklesystems/specklepy_qt_ui.git specklepy_qt_ui
      - run:
          name: Remove Git Artifacts
          command: |
            rm -rf ./specklepy_qt_ui/.git/
            rm ./specklepy_qt_ui/.gitignore
      - persist_to_workspace:
          root: ./
          paths:
            - specklepy_qt_ui
         
  package:
    executor: python/default
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Export requirements.txt
          command: |
            poetry export --without-hashes --without-urls --output plugin_utils/requirements.txt
      - run:
          name: Clean requirements.txt
          command: |
            python plugin_utils/patch_requirements.py
      - run: 
          name: Install dependencies
          command: |
            pip install pb_tool==3.1.0 pyqt5==5.15.9
      - run: 
          name: Update version if tag build
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "2.0.99.$CIRCLE_BUILD_NUM"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]+//')
            VERSION=$(echo "$SEMVER" | sed -e 's/[a-zA-Z]*\///')
            python patch_version.py $VERSION
      - run:
          name: Remove extra License
          command: |
            rm ./specklepy_qt_ui/LICENSE
      - run:
          name: ZIP plugin
          command: pb_tool zip
      - store_artifacts:
          path: zip_build/speckle-qgis.zip
      - persist_to_workspace:
          root: ./
          paths:
            - zip_build
  
  test:
    machine:
      image: ubuntu-2204:2023.02.1
      docker_layer_caching: false
    resource_class: medium
    parameters:
      tag:
        default: "3.11"
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install python
          command: |
            pyenv install -s << parameters.tag >>
            pyenv global << parameters.tag >>
      - run:
          name: Startup the Speckle Server
          command: docker compose -f docker-compose.yml up -d
      - run:
          name: Install Poetry
          command: |
            pip install poetry
      - run:
          name: Install packages
          command: |
            poetry lock --no-update
            poetry install
      - run:
          name: Remove qgis tests
          command: |
            rm -rf ./tests_qgis
      - run:
          name: Run tests
          command: poetry run pytest --cov --cov-report xml:reports/coverage.xml --junitxml=reports/test-results.xml
      - store_test_results:
          path: reports
      - store_artifacts:
          path: reports
      - codecov/upload

  build-connector-win: # Reusable job for basic connectors
    executor:
      name: win/default # comes with python 3.7.3
    parameters:
      slug:
        type: string
        default: "qgis"
      installer:
        type: boolean
        default: false
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Patch
          shell: powershell.exe
          command: |
            $tag = if([string]::IsNullOrEmpty($env:CIRCLE_TAG)) { "0.0.0" } else { $env:CIRCLE_TAG }
            $semver = if($tag.Contains('/')) {$tag.Split("/")[1] } else { $tag } 
            python patch_version.py $semver

      - run:
          name: Exit if External PR
          shell: bash.exe
          command: if [ "$CIRCLE_PR_REPONAME" ]; then circleci-agent step halt; fi
      
      - unless: # Build installers unsigned on non-tagged builds
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Build Installer
                shell: cmd.exe # does not work in powershell
                command: 
                  speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\qgis.iss /Sbyparam=$p

      - when: # Setup certificates and build installers signed for tagged builds
          condition: << pipeline.git.tag >>
          steps:
            - run: # Installs digicert signing tools for windows
                name: "Digicert Signing Manager Setup"
                command: |
                  cd C:\
                  curl.exe -X GET  https://one.digicert.com/signingmanager/api-ui/v1/releases/smtools-windows-x64.msi/download -H "x-api-key:$env:SM_API_KEY" -o smtools-windows-x64.msi
                  msiexec.exe /i smtools-windows-x64.msi /quiet /qn | Wait-Process
            - run: # Creates the Auth cert and the signing public PEM cert
                name: Create Auth & OV Signing Cert
                command: |
                  cd C:\
                  echo $env:SM_CLIENT_CERT_FILE_B64 > certificate.txt
                  certutil -decode certificate.txt certificate.p12
            - run: # Syncs certificates from Digicert into local user store
                name: Sync Certs
                shell: powershell.exe
                command: |
                  & $env:SSM\smksp_cert_sync.exe
            - run:
                name: Build Installer
                shell: cmd.exe
                command:
                  | # If no tag, use 0.0.0.1 and don't make any YML (for testing only!)
                  speckle-sharp-ci-tools\InnoSetup\ISCC.exe speckle-sharp-ci-tools\qgis.iss \
                  /Sbyparam=$p \
                  /DSIGN_INSTALLER \
                  /DCODE_SIGNING_CERT_FINGERPRINT=%SM_CODE_SIGNING_CERT_SHA1_HASH%
      - when:
          condition: << parameters.installer >>
          steps:
            - persist_to_workspace:
                root: ./
                paths:
                  - speckle-sharp-ci-tools/Installers
    environment:
      SSM: 'C:\Program Files\DigiCert\DigiCert One Signing Manager Tools'

  build-installer-mac:
    macos:
      xcode: 12.5.1
    parameters:
      runtime:
        type: string
      slug:
        type: string
      installer_path:
        type: string
        default: speckle-sharp-ci-tools/Mac/SpeckleQGISInstall
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install mono
          command: |
            HOMEBREW_NO_AUTO_UPDATE=1 brew install mono
      # Compress build files
      - run:
          name: Install dotnet
          command: curl -sSL https://dot.net/v1/dotnet-install.sh | bash /dev/stdin
      - run:
          name: Copy connector files to installer
          command: |
            mkdir -p <<parameters.installer_path >>/.installationFiles/
            cp zip_build/speckle-qgis.zip << parameters.installer_path >>/.installationFiles
      - run:
          name: Build Mac installer
          command: ~/.dotnet/dotnet publish << parameters.installer_path >>/SpeckleQGISInstall.sln -r << parameters.runtime >> -c Release
      - run:
          name: Zip installer
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "2.0.99.$CIRCLE_BUILD_NUM"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]+//')
            mkdir -p speckle-sharp-ci-tools/Installers/qgis
            (cd <<parameters.installer_path>>/bin/Release/net6.0/<< parameters.runtime >>/publish/ && zip -r - ./) > << parameters.slug >>-${SEMVER}.zip
            cp << parameters.slug >>-${SEMVER}.zip speckle-sharp-ci-tools/Installers/qgis/

      - persist_to_workspace:
          root: ./
          paths:
            - speckle-sharp-ci-tools/Installers/qgis/<< parameters.slug >>*.zip

  deploy-marketplace:
    executor: python/default
    steps:
      - checkout
      - run: 
          name: Install dependencies
          command: |
            pip install future==0.18.3
      - attach_workspace:
          at: ./
      - run: 
          name: Push to marketplace
          command: python plugin_utils/plugin_upload.py -u $QGIS_USERNAME -w $QGIS_PASSWORD zip_build/speckle-qgis.zip

  deploy-manager2:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:6.0
    parameters:
      slug:
        type: string
      arch:
        type: string
        default: Any
      os:
        type: string
      extension:
        type: string
    steps:
      - checkout
      - attach_workspace:
          at: ./
      - run:
          name: Install Manager Feed CLI
          command: dotnet tool install --global Speckle.Manager.Feed
      - run:
          name: Upload new version
          command: |
            TAG=$(if [ "${CIRCLE_TAG}" ]; then echo $CIRCLE_TAG; else echo "0.0.0"; fi;)
            SEMVER=$(echo "$TAG" | sed -e 's/\/[a-zA-Z-]*//')
            /root/.dotnet/tools/Speckle.Manager.Feed deploy \
              -s qgis \
              -v ${SEMVER} \
              -u https://releases.speckle.dev/installers/qgis/<< parameters.slug >>-${SEMVER}.<< parameters.extension >> \
              -o << parameters.os >> \
              -a << parameters.arch >> \
              -f speckle-sharp-ci-tools/Installers/qgis/<< parameters.slug >>-${SEMVER}.<< parameters.extension >>
workflows: # happens with every PR to main
  test_on_pr: # build the installers, but don't persist to workspace for deployment
    jobs:
      - get-ui:
          context: github-dev-bot
      - get-ci-tools:
          context: github-dev-bot
      - package:
          requires:
            - get-ui
            - get-ci-tools 
      - test:
          requires:
            - package
          matrix:
            parameters:
              tag: ["3.11"]
  build: # build the installers, but don't persist to workspace for deployment
    jobs:
      - get-ui:
          context: github-dev-bot
          filters: &build_filters
            branches:
              only:
                - main
                - /ci\/.*/
      - get-ci-tools:
          context: github-dev-bot
          filters: *build_filters
      - package:
          requires:
            - get-ui
            - get-ci-tools 
          filters: *build_filters
      - test:
          requires:
            - package
          matrix:
            parameters:
              tag: ["3.11"]
          filters: *build_filters
      - build-connector-win:
          requires:
            - test
          filters: *build_filters
          context: digicert-keylocker

      - build-installer-mac:
          name: Mac ARM Build
          slug: qgis-mac-arm
          runtime: osx-arm64
          requires:
            - build-connector-win
          filters: *build_filters

      - build-installer-mac:
          name: Mac Intel Build
          slug: qgis-mac-intel
          runtime: osx-x64
          requires:
            - build-connector-win
          filters: *build_filters

  deploy: # build installers and deploy 
    jobs:
      - get-ui:
          context: github-dev-bot
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - get-ci-tools:
          context: github-dev-bot
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - package:
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
          requires:
            - get-ui
            - get-ci-tools 
      - test:
          requires:
            - package
          matrix:
            parameters:
              tag: ["3.11"]
          filters:
            tags:
              only: /.*/
            branches:
              ignore: /.*/
      - build-connector-win:
          slug: qgis
          installer: true
          requires:
            - test
          filters: &deploy_filters
            tags:
              only: /([0-9]+)\.([0-9]+)\.([0-9]+)(?:-\w+)?$/
            branches:
              ignore: /.*/
          context: digicert-keylocker
      - deploy-marketplace:
          filters: *deploy_filters
          requires:
            - build-connector-win
      - deploy-manager2:
          slug: qgis
          os: Win
          arch: Any
          extension: exe
          requires:
            - build-connector-win
          filters: *deploy_filters
          context: do-spaces-speckle-releases
      
      
      - build-installer-mac:
          name: Mac ARM Build
          slug: qgis-mac-arm
          runtime: osx-arm64
          requires:
            - deploy-manager2
          filters: *deploy_filters

      - build-installer-mac:
          name: Mac Intel Build
          slug: qgis-mac-intel
          runtime: osx-x64
          requires:
            - deploy-mac-arm
          filters: *deploy_filters

      - deploy-manager2:
          context: do-spaces-speckle-releases
          name: deploy-mac-arm
          slug: qgis-mac-arm
          os: OSX
          arch: Arm
          extension: zip
          requires:
            - Mac ARM Build
          filters: *deploy_filters
      
      - deploy-manager2:
          context: do-spaces-speckle-releases
          name: deploy-mac-intel
          slug: qgis-mac-intel
          os: OSX
          arch: Intel
          extension: zip
          requires:
            - Mac Intel Build
          filters: *deploy_filters
